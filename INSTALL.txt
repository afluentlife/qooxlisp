If you are in a hurry, skip down to "In a hurry? Start here.".

Get qooxdoo
-----------
First, get qooxdoo and work through the "hello world" tutorial:

   http://qooxdoo.org/documentation/1.1/helloworld

The above is incredibly simple to execute but you do need
Python installed, which qooxdoo uses as a scripting platform
for building stuff.

In a hurry? Start here
----------------------
Next you need AllegroCL (which includes AllegroServe, the web server):

  http://www.franz.com/downloads/clp/survey
   
A port to OtherCL and OtherServe (or OtherToot) should be 
ridiculously easy but is left as an exercise. Contribs welcome.

Get git
-------
Not too hard on *nix. On Windows I use msysgit: 

    http://code.google.com/p/msysgit/

Now create a top-level directory called "devel" and in there execute:

 git clone http://github.com/kennytilton/utils-kt
 git clone http://github.com/kennytilton/cells
 git clone http://github.com/kennytilton/qooxlisp

If you want to put them somewhere else there are code paths 
in the lisp source (see function serve-apropos) which you will 
have to change to match.

qooxlisp also needs cl-json but as a convenience (and to work in the
ACL project file I use) I have duplicated the needed code under qooxdoo:

You can safely use a direct copy of cl-json (http://www.cliki.net/cl-json) 
if you like, but then you need to ASDF load it somehow and eliminate the
cl-json project from the qooxlisp project (referring to the ACL project manager).

Now fire up the AllegroCL trial and open the apropos project.

In apropos.lisp, modify the paths to the qooxdoo stuff in function serve-apropos
to match your set-up.

Run the project (which starts up Allegroserve) then open localhost:8000 in your browser. 
I have tested FireFox, Chrome, Safari, and IE -- all on Windows.

With luck you'll see a busy dialog offering a GUI interface to the Lisp apropos
function running in the server.

From here on we just slog thru the vast and magnificent qooxdoo framework
providing glue, but really the interesting part is done. Like
LTk and Celtk and cells-gtk before it, the manual for qooxlisp will be the
qooxdoo manual. qooxlisp will hide a lot of the wiring, but the classes and slots
of qooxlisp will be the classes and properties of qooxdoo.





